version: 2.1

jobs:
  build-and-test:
    docker:
      - image: cimg/node:20.11
    steps:
      - checkout
      
      # Instalar dependencias del sistema (jq para procesar JSON)
      - run:
          name: Instalar jq
          command: sudo apt-get update && sudo apt-get install -y jq

      # Restaurar caché de dependencias
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-
      
      # Instalar dependencias
      - run:
          name: Instalar Dependencias
          command: npm ci
      
      # Guardar caché
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}
      
      # Linter
      - run:
          name: Ejecutar Linter
          command: npm run lint || true
      
      # Build
      - run:
          name: Build del Proyecto
          command: npm run build

      # QA con Cline
      - run:
          name: Revisar QA con Cline
          command: |
            curl -s -X POST https://api.hicap.ai/v2/openai \
            -H "Authorization: Bearer $CLINE_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "repo": "senda-flow",
              "branch": "main",
              "build_url": "'"$CIRCLE_BUILD_URL"'",
              "request": "Revisa este build y devuelve un JSON con: { status: 'pass'|'fail', errors: [lista de errores] }"
            }' > cline_qa_result.json

      # Interpretar JSON de Cline
      - run:
          name: Validar QA parseando JSON
          command: |
            STATUS=$(jq -r '.status' cline_qa_result.json)
            if [ "$STATUS" = "fail" ]; then
              echo "La evaluación QA con IA detectó errores, build fallido."
              jq '.' cline_qa_result.json
              exit 1
            else
              echo "La evaluación QA con IA se ha aprobado correctamente."
              jq '.' cline_qa_result.json
            fi

      # Guardar artefactos
      - store_artifacts:
          path: dist
          destination: build-output
      
      # Persistir workspace
      - persist_to_workspace:
          root: .
          paths:
            - dist

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build-and-test:
          filters:
            branches:
              only:
                - main
                - develop
